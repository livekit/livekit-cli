# lk fish shell completion

function __fish_lk_no_subcommand --description 'Test if there has been any subcommand yet'
    for i in (commandline -opc)
        if contains -- $i generate-fish-completion app agent a cloud project room create-room list-rooms list-room update-room-metadata list-participants get-participant remove-participant update-participant mute-track update-subscriptions send-data token create-token join-room dispatch egress start-room-composite-egress start-web-egress start-participant-egress start-track-composite-egress start-track-egress list-egress update-layout update-stream stop-egress test-egress-template ingress create-ingress update-ingress list-ingress delete-ingress sip list-sip-trunk delete-sip-trunk create-sip-dispatch-rule list-sip-dispatch-rule delete-sip-dispatch-rule create-sip-participant replay perf load-test completion
            return 1
        end
    end
    return 0
end

complete -c lk -n '__fish_lk_no_subcommand' -f -l url -r -d '`URL` to LiveKit instance'
complete -c lk -n '__fish_lk_no_subcommand' -f -l api-key -r -d 'Your `KEY`'
complete -c lk -n '__fish_lk_no_subcommand' -f -l api-secret -r -d 'Your `SECRET`'
complete -c lk -n '__fish_lk_no_subcommand' -f -l dev -d 'Use developer credentials for local LiveKit server'
complete -c lk -n '__fish_lk_no_subcommand' -f -l project -r -d '`NAME` of a configured project'
complete -c lk -n '__fish_lk_no_subcommand' -f -l subdomain -r -d '`SUBDOMAIN` of a configured project'
complete -c lk -n '__fish_lk_no_subcommand' -f -l config -r -d 'Config `TOML` to use in the working directory'
complete -c lk -n '__fish_lk_no_subcommand' -f -l curl -d 'Print curl commands for API actions'
complete -c lk -n '__fish_lk_no_subcommand' -f -l verbose
complete -c lk -n '__fish_lk_no_subcommand' -f -l help -s h -d 'show help'
complete -c lk -n '__fish_lk_no_subcommand' -f -l version -s v -d 'print the version'
complete -c lk -n '__fish_seen_subcommand_from generate-fish-completion' -f -l out -s o -r
complete -c lk -n '__fish_seen_subcommand_from generate-fish-completion' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from generate-fish-completion; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_lk_no_subcommand' -a 'app' -d 'Initialize and manage applications'
complete -c lk -n '__fish_seen_subcommand_from app' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from app; and not __fish_seen_subcommand_from create list-templates install run env help h' -a 'create' -d 'Bootstrap a new application from a template or through guided creation'
complete -c lk -n '__fish_seen_subcommand_from create' -f -l template -r -d '`TEMPLATE` to instantiate, see https://github.com/livekit-examples'
complete -c lk -n '__fish_seen_subcommand_from create' -f -l template-url -r -d '`URL` to instantiate, must contain a taskfile.yaml'
complete -c lk -n '__fish_seen_subcommand_from create' -f -l sandbox -r -d '`NAME` of the sandbox, see your cloud dashboard'
complete -c lk -n '__fish_seen_subcommand_from create' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from create; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from app; and not __fish_seen_subcommand_from create list-templates install run env help h' -a 'list-templates' -d 'List available templates to bootstrap a new application'
complete -c lk -n '__fish_seen_subcommand_from list-templates' -f -l json -s j -d 'Output as JSON'
complete -c lk -n '__fish_seen_subcommand_from list-templates' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from list-templates; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -c lk -n '__fish_seen_subcommand_from install' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from install; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -c lk -n '__fish_seen_subcommand_from run' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from run; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from app; and not __fish_seen_subcommand_from create list-templates install run env help h' -a 'env' -d 'Fill environment variables based on .env.example (optional) and project credentials'
complete -c lk -n '__fish_seen_subcommand_from env' -f -l write -s w -d 'Write environment variables to file'
complete -c lk -n '__fish_seen_subcommand_from env' -l destination -s d -r -d 'Destination file path, when used with --write'
complete -c lk -n '__fish_seen_subcommand_from env' -l example -s e -r -d 'Example file path'
complete -c lk -n '__fish_seen_subcommand_from env' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from env; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from app; and not __fish_seen_subcommand_from create list-templates install run env help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_lk_no_subcommand' -a 'agent' -d 'Manage LiveKit Cloud Agents'
complete -c lk -n '__fish_seen_subcommand_from agent a' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from agent a; and not __fish_seen_subcommand_from create config deploy status update rollback logs tail delete destroy versions list secrets update-secrets help h' -a 'create' -d 'Create a new LiveKit Cloud Agent'
complete -c lk -n '__fish_seen_subcommand_from create' -f -l secrets -r -d 'KEY=VALUE comma separated secrets. These will be injected as environment variables into the agent. These take precedence over secrets-file.'
complete -c lk -n '__fish_seen_subcommand_from create' -l secrets-file -r -d '`FILE` containing secret KEY=VALUE pairs, one per line. These will be injected as environment variables into the agent.'
complete -c lk -n '__fish_seen_subcommand_from create' -f -l silent -d 'If set, will not prompt for confirmation'
complete -c lk -n '__fish_seen_subcommand_from create' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from create; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from agent a; and not __fish_seen_subcommand_from create config deploy status update rollback logs tail delete destroy versions list secrets update-secrets help h' -a 'config' -d 'Creates a livekit.toml in the working directory for an existing agent.'
complete -c lk -n '__fish_seen_subcommand_from config' -f -l id -r -d '`ID` of the agent. If unset, and the livekit.toml file is present, will use the id found there.'
complete -c lk -n '__fish_seen_subcommand_from config' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from config; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from agent a; and not __fish_seen_subcommand_from create config deploy status update rollback logs tail delete destroy versions list secrets update-secrets help h' -a 'deploy' -d 'Deploy a new version of the agent'
complete -c lk -n '__fish_seen_subcommand_from deploy' -f -l secrets -r -d 'KEY=VALUE comma separated secrets. These will be injected as environment variables into the agent. These take precedence over secrets-file.'
complete -c lk -n '__fish_seen_subcommand_from deploy' -l secrets-file -r -d '`FILE` containing secret KEY=VALUE pairs, one per line. These will be injected as environment variables into the agent.'
complete -c lk -n '__fish_seen_subcommand_from deploy' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from deploy; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from agent a; and not __fish_seen_subcommand_from create config deploy status update rollback logs tail delete destroy versions list secrets update-secrets help h' -a 'status' -d 'Get the status of an agent'
complete -c lk -n '__fish_seen_subcommand_from status' -f -l id -r -d '`ID` of the agent. If unset, and the livekit.toml file is present, will use the id found there.'
complete -c lk -n '__fish_seen_subcommand_from status' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from status; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from agent a; and not __fish_seen_subcommand_from create config deploy status update rollback logs tail delete destroy versions list secrets update-secrets help h' -a 'update' -d 'Update an agent metadata and secrets. This will restart the agent.'
complete -c lk -n '__fish_seen_subcommand_from update' -f -l secrets -r -d 'KEY=VALUE comma separated secrets. These will be injected as environment variables into the agent. These take precedence over secrets-file.'
complete -c lk -n '__fish_seen_subcommand_from update' -l secrets-file -r -d '`FILE` containing secret KEY=VALUE pairs, one per line. These will be injected as environment variables into the agent.'
complete -c lk -n '__fish_seen_subcommand_from update' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from update; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from agent a; and not __fish_seen_subcommand_from create config deploy status update rollback logs tail delete destroy versions list secrets update-secrets help h' -a 'rollback' -d 'Rollback an agent to a previous version'
complete -c lk -n '__fish_seen_subcommand_from rollback' -f -l version -r -d 'Version to rollback to, defaults to most recent previous to current.'
complete -c lk -n '__fish_seen_subcommand_from rollback' -f -l id -r -d '`ID` of the agent. If unset, and the livekit.toml file is present, will use the id found there.'
complete -c lk -n '__fish_seen_subcommand_from rollback' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from rollback; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from agent a; and not __fish_seen_subcommand_from create config deploy status update rollback logs tail delete destroy versions list secrets update-secrets help h' -a 'logs' -d 'Tail logs from agent'
complete -c lk -n '__fish_seen_subcommand_from logs tail' -f -l id -r -d '`ID` of the agent. If unset, and the livekit.toml file is present, will use the id found there.'
complete -c lk -n '__fish_seen_subcommand_from logs tail' -f -l log-type -r -d 'Type of logs to retrieve. Valid values are \'deploy\' and \'build\''
complete -c lk -n '__fish_seen_subcommand_from logs tail' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from logs tail; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from agent a; and not __fish_seen_subcommand_from create config deploy status update rollback logs tail delete destroy versions list secrets update-secrets help h' -a 'delete' -d 'Delete an agent'
complete -c lk -n '__fish_seen_subcommand_from delete destroy' -f -l id -r -d '`ID` of the agent. If unset, and the livekit.toml file is present, will use the id found there.'
complete -c lk -n '__fish_seen_subcommand_from delete destroy' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from delete destroy; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from agent a; and not __fish_seen_subcommand_from create config deploy status update rollback logs tail delete destroy versions list secrets update-secrets help h' -a 'versions' -d 'List versions of an agent'
complete -c lk -n '__fish_seen_subcommand_from versions' -f -l id -r -d '`ID` of the agent. If unset, and the livekit.toml file is present, will use the id found there.'
complete -c lk -n '__fish_seen_subcommand_from versions' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from versions; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from agent a; and not __fish_seen_subcommand_from create config deploy status update rollback logs tail delete destroy versions list secrets update-secrets help h' -a 'list' -d 'List all LiveKit Cloud Agents'
complete -c lk -n '__fish_seen_subcommand_from list' -f -l id -r -d '`IDs` of agent(s)'
complete -c lk -n '__fish_seen_subcommand_from list' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from list; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from agent a; and not __fish_seen_subcommand_from create config deploy status update rollback logs tail delete destroy versions list secrets update-secrets help h' -a 'secrets' -d 'List secrets for an agent'
complete -c lk -n '__fish_seen_subcommand_from secrets' -f -l id -r -d '`ID` of the agent. If unset, and the livekit.toml file is present, will use the id found there.'
complete -c lk -n '__fish_seen_subcommand_from secrets' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from secrets; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from agent a; and not __fish_seen_subcommand_from create config deploy status update rollback logs tail delete destroy versions list secrets update-secrets help h' -a 'update-secrets' -d 'Update secrets for an agent, will cause a re-start of the agent.'
complete -c lk -n '__fish_seen_subcommand_from update-secrets' -f -l secrets -r -d 'KEY=VALUE comma separated secrets. These will be injected as environment variables into the agent. These take precedence over secrets-file.'
complete -c lk -n '__fish_seen_subcommand_from update-secrets' -l secrets-file -r -d '`FILE` containing secret KEY=VALUE pairs, one per line. These will be injected as environment variables into the agent.'
complete -c lk -n '__fish_seen_subcommand_from update-secrets' -f -l id -r -d '`ID` of the agent. If unset, and the livekit.toml file is present, will use the id found there.'
complete -c lk -n '__fish_seen_subcommand_from update-secrets' -f -l overwrite -d 'If set, will overwrite existing secrets'
complete -c lk -n '__fish_seen_subcommand_from update-secrets' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from update-secrets; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from agent a; and not __fish_seen_subcommand_from create config deploy status update rollback logs tail delete destroy versions list secrets update-secrets help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_lk_no_subcommand' -a 'cloud' -d 'Interact with LiveKit Cloud services'
complete -c lk -n '__fish_seen_subcommand_from cloud' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from cloud; and not __fish_seen_subcommand_from auth help h' -a 'auth' -d 'Authenticate LiveKit Cloud account to link your projects'
complete -c lk -n '__fish_seen_subcommand_from auth' -f -l revoke -s R
complete -c lk -n '__fish_seen_subcommand_from auth' -f -l timeout -s t -r -d 'Number of `SECONDS` to attempt authentication before giving up'
complete -c lk -n '__fish_seen_subcommand_from auth' -f -l poll-interval -s i -r -d 'Number of `SECONDS` between poll requests to verify authentication'
complete -c lk -n '__fish_seen_subcommand_from auth' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from auth; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from cloud; and not __fish_seen_subcommand_from auth help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_lk_no_subcommand' -a 'project' -d 'Add or remove projects and view existing project properties'
complete -c lk -n '__fish_seen_subcommand_from project' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from project; and not __fish_seen_subcommand_from add list remove set-default help h' -a 'add' -d 'Add a new project (for LiveKit Cloud projects, also see `lk cloud auth`)'
complete -c lk -n '__fish_seen_subcommand_from add' -f -l url -r -d '`URL` of the LiveKit server'
complete -c lk -n '__fish_seen_subcommand_from add' -f -l api-key -r -d 'Project `KEY`'
complete -c lk -n '__fish_seen_subcommand_from add' -f -l api-secret -r -d 'Project `SECRET`'
complete -c lk -n '__fish_seen_subcommand_from add' -f -l default -d 'Set this project as the default'
complete -c lk -n '__fish_seen_subcommand_from add' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from add; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from project; and not __fish_seen_subcommand_from add list remove set-default help h' -a 'list' -d 'List all configured projects'
complete -c lk -n '__fish_seen_subcommand_from list' -f -l json -s j -d 'Output as JSON'
complete -c lk -n '__fish_seen_subcommand_from list' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from list; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from project; and not __fish_seen_subcommand_from add list remove set-default help h' -a 'remove' -d 'Remove an existing project from config'
complete -c lk -n '__fish_seen_subcommand_from remove' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from remove; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from project; and not __fish_seen_subcommand_from add list remove set-default help h' -a 'set-default' -d 'Set a project as default to use with other commands'
complete -c lk -n '__fish_seen_subcommand_from set-default' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from set-default; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from project; and not __fish_seen_subcommand_from add list remove set-default help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_lk_no_subcommand' -a 'room' -d 'Create or delete rooms and manage existing room properties'
complete -c lk -n '__fish_seen_subcommand_from room' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from room; and not __fish_seen_subcommand_from create list update delete join participants mute-track update-subscriptions send-data help h' -a 'create' -d 'Create a room'
complete -c lk -n '__fish_seen_subcommand_from create' -l room-egress-file -r -d 'RoomCompositeRequest `JSON` file (see examples/room-composite-file.json)'
complete -c lk -n '__fish_seen_subcommand_from create' -l participant-egress-file -r -d 'ParticipantEgress `JSON` file (see examples/auto-participant-egress.json)'
complete -c lk -n '__fish_seen_subcommand_from create' -l track-egress-file -r -d 'AutoTrackEgress `JSON` file (see examples/auto-track-egress.json)'
complete -c lk -n '__fish_seen_subcommand_from create' -l agents-file -r -d 'Agents configuration `JSON` file'
complete -c lk -n '__fish_seen_subcommand_from create' -f -l room-preset -r -d '`NAME` of the room configuration preset to associate with the created room'
complete -c lk -n '__fish_seen_subcommand_from create' -f -l min-playout-delay -r -d 'Minimum playout delay for video (in `MS`)'
complete -c lk -n '__fish_seen_subcommand_from create' -f -l max-playout-delay -r -d 'Maximum playout delay for video (in `MS`)'
complete -c lk -n '__fish_seen_subcommand_from create' -f -l sync-streams -d 'Improve A/V sync by placing them in the same stream. when enabled, transceivers will not be reused'
complete -c lk -n '__fish_seen_subcommand_from create' -f -l empty-timeout -r -d 'Number of `SECS` to keep the room open before any participant joins'
complete -c lk -n '__fish_seen_subcommand_from create' -f -l departure-timeout -r -d 'Number of `SECS` to keep the room open after the last participant leaves'
complete -c lk -n '__fish_seen_subcommand_from create' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from create; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from room; and not __fish_seen_subcommand_from create list update delete join participants mute-track update-subscriptions send-data help h' -a 'list' -d 'List or search for active rooms by name'
complete -c lk -n '__fish_seen_subcommand_from list' -f -l json -s j -d 'Output as JSON'
complete -c lk -n '__fish_seen_subcommand_from list' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from list; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from room; and not __fish_seen_subcommand_from create list update delete join participants mute-track update-subscriptions send-data help h' -a 'update' -d 'Modify properties of an active room'
complete -c lk -n '__fish_seen_subcommand_from update' -f -l metadata -r
complete -c lk -n '__fish_seen_subcommand_from update' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from update; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from room; and not __fish_seen_subcommand_from create list update delete join participants mute-track update-subscriptions send-data help h' -a 'delete' -d 'Delete a room'
complete -c lk -n '__fish_seen_subcommand_from delete' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from delete; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from room; and not __fish_seen_subcommand_from create list update delete join participants mute-track update-subscriptions send-data help h' -a 'join' -d 'Joins a room as a participant'
complete -c lk -n '__fish_seen_subcommand_from join' -f -l identity -r -d '`ID` of participant'
complete -c lk -n '__fish_seen_subcommand_from join' -f -l publish-demo -d 'Publish demo video as a loop'
complete -c lk -n '__fish_seen_subcommand_from join' -l publish -r -d '`FILES` to publish as tracks to room (supports .h264, .ivf, .ogg). Can be used multiple times to publish multiple files. Can publish from Unix or TCP socket using the format \'<codec>://<socket_name>\' or \'<codec>://<host:address>\' respectively. Valid codecs are "h264", "vp8", "opus"'
complete -c lk -n '__fish_seen_subcommand_from join' -f -l publish-data -r -d 'Publish user data to the room.'
complete -c lk -n '__fish_seen_subcommand_from join' -f -l publish-dtmf -r -d 'Publish DTMF digits to the room. Character \'w\' adds 0.5 sec delay.'
complete -c lk -n '__fish_seen_subcommand_from join' -f -l fps -r -d 'If video files are published, indicates `FPS` of video'
complete -c lk -n '__fish_seen_subcommand_from join' -f -l exit-after-publish -d 'When publishing, exit after file or stream is complete'
complete -c lk -n '__fish_seen_subcommand_from join' -f -l attribute -r -d 'set attributes in key=value format, can be used multiple times'
complete -c lk -n '__fish_seen_subcommand_from join' -l attribute-file -r -d 'read attributes from a `JSON` file'
complete -c lk -n '__fish_seen_subcommand_from join' -f -l auto-subscribe -d 'Automatically subscribe to published tracks.'
complete -c lk -n '__fish_seen_subcommand_from join' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from join; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from room; and not __fish_seen_subcommand_from create list update delete join participants mute-track update-subscriptions send-data help h' -a 'participants' -d 'Manage room participants'
complete -c lk -n '__fish_seen_subcommand_from participants' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from participants; and not __fish_seen_subcommand_from list get remove forward move update help h' -a 'list' -d 'List or search for active rooms by name'
complete -c lk -n '__fish_seen_subcommand_from list' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from list; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from participants; and not __fish_seen_subcommand_from list get remove forward move update help h' -a 'get' -d 'Fetch metadata of a room participant'
complete -c lk -n '__fish_seen_subcommand_from get' -f -l room -r -d '`NAME` of the room'
complete -c lk -n '__fish_seen_subcommand_from get' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from get; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from participants; and not __fish_seen_subcommand_from list get remove forward move update help h' -a 'remove' -d 'Remove a participant from a room'
complete -c lk -n '__fish_seen_subcommand_from remove' -f -l room -r -d '`NAME` of the room'
complete -c lk -n '__fish_seen_subcommand_from remove' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from remove; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from participants; and not __fish_seen_subcommand_from list get remove forward move update help h' -a 'forward' -d 'Forward a participant to a different room'
complete -c lk -n '__fish_seen_subcommand_from forward' -f -l room -r -d '`NAME` of the room'
complete -c lk -n '__fish_seen_subcommand_from forward' -f -l identity -r -d '`ID` of participant'
complete -c lk -n '__fish_seen_subcommand_from forward' -f -l destination-room -r -d '`NAME` of the destination room'
complete -c lk -n '__fish_seen_subcommand_from forward' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from forward; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from participants; and not __fish_seen_subcommand_from list get remove forward move update help h' -a 'move' -d 'Move a participant to a different room'
complete -c lk -n '__fish_seen_subcommand_from move' -f -l room -r -d '`NAME` of the room'
complete -c lk -n '__fish_seen_subcommand_from move' -f -l identity -r -d '`ID` of participant'
complete -c lk -n '__fish_seen_subcommand_from move' -f -l destination-room -r -d '`NAME` of the destination room'
complete -c lk -n '__fish_seen_subcommand_from move' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from move; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from participants; and not __fish_seen_subcommand_from list get remove forward move update help h' -a 'update' -d 'Change the metadata and permissions for a room participant'
complete -c lk -n '__fish_seen_subcommand_from update' -f -l room -r -d '`NAME` of the room'
complete -c lk -n '__fish_seen_subcommand_from update' -f -l metadata -r -d 'JSON describing participant metadata (existing values for unset fields)'
complete -c lk -n '__fish_seen_subcommand_from update' -f -l permissions -r -d 'JSON describing participant permissions (existing values for unset fields)'
complete -c lk -n '__fish_seen_subcommand_from update' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from update; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from participants; and not __fish_seen_subcommand_from list get remove forward move update help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from room; and not __fish_seen_subcommand_from create list update delete join participants mute-track update-subscriptions send-data help h' -a 'mute-track' -d 'Mute or unmute a track'
complete -c lk -n '__fish_seen_subcommand_from mute-track' -f -l room -r -d '`NAME` of the room'
complete -c lk -n '__fish_seen_subcommand_from mute-track' -f -l identity -r -d '`ID` of participant'
complete -c lk -n '__fish_seen_subcommand_from mute-track' -f -l help -s h -d 'show help'
complete -c lk -n '__fish_seen_subcommand_from mute-track' -f -l mute -s m -d 'Mute the track'
complete -c lk -n '__fish_seen_subcommand_from mute-track' -f -l unmute -s u -d 'Unmute the track'
complete -x -c lk -n '__fish_seen_subcommand_from mute-track; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from room; and not __fish_seen_subcommand_from create list update delete join participants mute-track update-subscriptions send-data help h' -a 'update-subscriptions' -d 'Subscribe or unsubscribe from a track'
complete -c lk -n '__fish_seen_subcommand_from update-subscriptions' -f -l room -r -d '`NAME` of the room'
complete -c lk -n '__fish_seen_subcommand_from update-subscriptions' -f -l identity -r -d '`ID` of participant'
complete -c lk -n '__fish_seen_subcommand_from update-subscriptions' -f -l help -s h -d 'show help'
complete -c lk -n '__fish_seen_subcommand_from update-subscriptions' -f -l subscribe -s s -d 'Subscribe to the track'
complete -c lk -n '__fish_seen_subcommand_from update-subscriptions' -f -l unsubscribe -s S -d 'Unsubscribe to the track'
complete -x -c lk -n '__fish_seen_subcommand_from update-subscriptions; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from room; and not __fish_seen_subcommand_from create list update delete join participants mute-track update-subscriptions send-data help h' -a 'send-data' -d 'Send arbitrary JSON data to client'
complete -c lk -n '__fish_seen_subcommand_from send-data' -f -l room -r -d '`NAME` of the room'
complete -c lk -n '__fish_seen_subcommand_from send-data' -f -l topic -r -d '`TOPIC` of the message'
complete -c lk -n '__fish_seen_subcommand_from send-data' -f -l identity -r -d 'One or more participant identities to send the message to. When empty, broadcasts to the entire room'
complete -c lk -n '__fish_seen_subcommand_from send-data' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from send-data; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from room; and not __fish_seen_subcommand_from create list update delete join participants mute-track update-subscriptions send-data help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -c lk -n '__fish_seen_subcommand_from create-room' -f -l name -r -d 'name of the room'
complete -c lk -n '__fish_seen_subcommand_from create-room' -f -l room-egress-file -r -d 'RoomCompositeRequest json file (see examples/room-composite-file.json)'
complete -c lk -n '__fish_seen_subcommand_from create-room' -f -l participant-egress-file -r -d 'ParticipantEgress json file (see examples/auto-participant-egress.json)'
complete -c lk -n '__fish_seen_subcommand_from create-room' -f -l track-egress-file -r -d 'AutoTrackEgress json file (see examples/auto-track-egress.json)'
complete -c lk -n '__fish_seen_subcommand_from create-room' -f -l agents-file -r -d 'Agents configuration json file'
complete -c lk -n '__fish_seen_subcommand_from create-room' -f -l room-configuration -r -d 'Name of the room configuration to associate with the created room'
complete -c lk -n '__fish_seen_subcommand_from create-room' -f -l min-playout-delay -r -d 'minimum playout delay for video (in ms)'
complete -c lk -n '__fish_seen_subcommand_from create-room' -f -l max-playout-delay -r -d 'maximum playout delay for video (in ms)'
complete -c lk -n '__fish_seen_subcommand_from create-room' -f -l sync-streams -d 'improve A/V sync by placing them in the same stream. when enabled, transceivers will not be reused'
complete -c lk -n '__fish_seen_subcommand_from create-room' -f -l empty-timeout -r -d 'number of seconds to keep the room open before any participant joins'
complete -c lk -n '__fish_seen_subcommand_from create-room' -f -l departure-timeout -r -d 'number of seconds to keep the room open after the last participant leaves'
complete -c lk -n '__fish_seen_subcommand_from create-room' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from create-room; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -c lk -n '__fish_seen_subcommand_from list-rooms' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from list-rooms; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -c lk -n '__fish_seen_subcommand_from list-room' -f -l room -r -d '`NAME` of the room'
complete -c lk -n '__fish_seen_subcommand_from list-room' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from list-room; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -c lk -n '__fish_seen_subcommand_from update-room-metadata' -f -l room -r -d '`NAME` of the room'
complete -c lk -n '__fish_seen_subcommand_from update-room-metadata' -f -l metadata -r
complete -c lk -n '__fish_seen_subcommand_from update-room-metadata' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from update-room-metadata; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -c lk -n '__fish_seen_subcommand_from list-participants' -f -l room -r -d '`NAME` of the room'
complete -c lk -n '__fish_seen_subcommand_from list-participants' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from list-participants; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -c lk -n '__fish_seen_subcommand_from get-participant' -f -l room -r -d '`NAME` of the room'
complete -c lk -n '__fish_seen_subcommand_from get-participant' -f -l identity -r -d '`ID` of participant'
complete -c lk -n '__fish_seen_subcommand_from get-participant' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from get-participant; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -c lk -n '__fish_seen_subcommand_from remove-participant' -f -l room -r -d '`NAME` of the room'
complete -c lk -n '__fish_seen_subcommand_from remove-participant' -f -l identity -r -d '`ID` of participant'
complete -c lk -n '__fish_seen_subcommand_from remove-participant' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from remove-participant; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -c lk -n '__fish_seen_subcommand_from update-participant' -f -l room -r -d '`NAME` of the room'
complete -c lk -n '__fish_seen_subcommand_from update-participant' -f -l identity -r -d '`ID` of participant'
complete -c lk -n '__fish_seen_subcommand_from update-participant' -f -l metadata -r -d '`JSON` describing participant metadata'
complete -c lk -n '__fish_seen_subcommand_from update-participant' -f -l permissions -r -d '`JSON` describing participant permissions (existing values for unset fields)'
complete -c lk -n '__fish_seen_subcommand_from update-participant' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from update-participant; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -c lk -n '__fish_seen_subcommand_from mute-track' -f -l room -r -d '`NAME` of the room'
complete -c lk -n '__fish_seen_subcommand_from mute-track' -f -l identity -r -d '`ID` of participant'
complete -c lk -n '__fish_seen_subcommand_from mute-track' -f -l help -s h -d 'show help'
complete -c lk -n '__fish_seen_subcommand_from mute-track' -f -l m -s mute -s muted -d 'Mute the track'
complete -c lk -n '__fish_seen_subcommand_from mute-track' -f -l u -s unmute -d 'Unmute the track'
complete -x -c lk -n '__fish_seen_subcommand_from mute-track; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -c lk -n '__fish_seen_subcommand_from update-subscriptions' -f -l room -r -d '`NAME` of the room'
complete -c lk -n '__fish_seen_subcommand_from update-subscriptions' -f -l identity -r -d '`ID` of participant'
complete -c lk -n '__fish_seen_subcommand_from update-subscriptions' -f -l subscribe -d 'Set to true to subscribe, otherwise it\'ll unsubscribe'
complete -c lk -n '__fish_seen_subcommand_from update-subscriptions' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from update-subscriptions; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -c lk -n '__fish_seen_subcommand_from send-data' -f -l room -r -d '`NAME` of the room'
complete -c lk -n '__fish_seen_subcommand_from send-data' -f -l topic -r -d '`TOPIC` of the message'
complete -c lk -n '__fish_seen_subcommand_from send-data' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from send-data; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_lk_no_subcommand' -a 'token' -d 'Create access tokens with granular capabilities'
complete -c lk -n '__fish_seen_subcommand_from token' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from token; and not __fish_seen_subcommand_from create help h' -a 'create' -d 'Creates an access token'
complete -c lk -n '__fish_seen_subcommand_from create' -f -l create -d 'Ability to create or delete rooms'
complete -c lk -n '__fish_seen_subcommand_from create' -f -l list -d 'Ability to list rooms'
complete -c lk -n '__fish_seen_subcommand_from create' -f -l join -d 'Ability to join a room (requires --room and --identity)'
complete -c lk -n '__fish_seen_subcommand_from create' -f -l admin -d 'Ability to moderate a room (requires --room)'
complete -c lk -n '__fish_seen_subcommand_from create' -f -l egress -d 'Ability to interact with Egress services'
complete -c lk -n '__fish_seen_subcommand_from create' -f -l ingress -d 'Ability to interact with Ingress services'
complete -c lk -n '__fish_seen_subcommand_from create' -f -l allow-update-metadata -d 'Ability to update their own name and metadata'
complete -c lk -n '__fish_seen_subcommand_from create' -f -l allow-source -r -d 'Restrict publishing to only `SOURCE` types (e.g. --allow-source camera,microphone), defaults to all'
complete -c lk -n '__fish_seen_subcommand_from create' -f -l identity -s i -r -d 'Unique `ID` of the participant, used with --join'
complete -c lk -n '__fish_seen_subcommand_from create' -f -l name -s n -r -d '`NAME` of the participant, used with --join. defaults to identity'
complete -c lk -n '__fish_seen_subcommand_from create' -f -l room -s r -r -d '`NAME` of the room to join'
complete -c lk -n '__fish_seen_subcommand_from create' -f -l metadata -r -d '`JSON` metadata to encode in the token, will be passed to participant'
complete -c lk -n '__fish_seen_subcommand_from create' -f -l valid-for -r -d '`TIME` that the token is valid for, e.g. "5m", "1h10m" (s: seconds, m: minutes, h: hours)'
complete -c lk -n '__fish_seen_subcommand_from create' -f -l grant -r -d 'Additional `VIDEO_GRANT` fields. It\'ll be merged with other arguments (JSON formatted)'
complete -c lk -n '__fish_seen_subcommand_from create' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from create; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from token; and not __fish_seen_subcommand_from create help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -c lk -n '__fish_seen_subcommand_from create-token' -f -l create -d 'Ability to create or delete rooms'
complete -c lk -n '__fish_seen_subcommand_from create-token' -f -l list -d 'Ability to list rooms'
complete -c lk -n '__fish_seen_subcommand_from create-token' -f -l join -d 'Ability to join a room (requires --room and --identity)'
complete -c lk -n '__fish_seen_subcommand_from create-token' -f -l admin -d 'Ability to moderate a room (requires --room)'
complete -c lk -n '__fish_seen_subcommand_from create-token' -f -l recorder -d 'UNUSED'
complete -c lk -n '__fish_seen_subcommand_from create-token' -f -l egress -d 'Ability to interact with Egress services'
complete -c lk -n '__fish_seen_subcommand_from create-token' -f -l ingress -d 'Ability to interact with Ingress services'
complete -c lk -n '__fish_seen_subcommand_from create-token' -f -l allow-update-metadata -d 'Ability to update their own name and metadata'
complete -c lk -n '__fish_seen_subcommand_from create-token' -f -l allow-source -r -d 'Allow one or more `SOURCE`s to be published (i.e. --allow-source camera,microphone). if left blank, all sources are allowed'
complete -c lk -n '__fish_seen_subcommand_from create-token' -f -l identity -s i -r -d 'Unique `ID` of the participant, used with --join'
complete -c lk -n '__fish_seen_subcommand_from create-token' -f -l name -s n -r -d '`NAME` of the participant, used with --join. defaults to identity'
complete -c lk -n '__fish_seen_subcommand_from create-token' -f -l room -s r -r -d '`NAME` of the room to join'
complete -c lk -n '__fish_seen_subcommand_from create-token' -f -l room-configuration -r -d 'name of the room configuration to use when creating a room'
complete -c lk -n '__fish_seen_subcommand_from create-token' -f -l metadata -r -d '`JSON` metadata to encode in the token, will be passed to participant'
complete -c lk -n '__fish_seen_subcommand_from create-token' -f -l valid-for -r -d 'Amount of `TIME` that the token is valid for. i.e. "5m", "1h10m" (s: seconds, m: minutes, h: hours)'
complete -c lk -n '__fish_seen_subcommand_from create-token' -f -l grant -r -d 'Additional `VIDEO_GRANT` fields. It\'ll be merged with other arguments (JSON formatted)'
complete -c lk -n '__fish_seen_subcommand_from create-token' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from create-token; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -c lk -n '__fish_seen_subcommand_from join-room' -f -l room -r -d '`NAME` of the room'
complete -c lk -n '__fish_seen_subcommand_from join-room' -f -l identity -r -d '`ID` of participant'
complete -c lk -n '__fish_seen_subcommand_from join-room' -f -l publish-demo -d 'publish demo video as a loop'
complete -c lk -n '__fish_seen_subcommand_from join-room' -l publish -r -d '`FILES` to publish as tracks to room (supports .h264, .ivf, .ogg). can be used multiple times to publish multiple files. can publish from Unix or TCP socket using the format \'<codec>://<socket_name>\' or \'<codec>://<host:address>\' respectively. Valid codecs are "h264", "vp8", "opus"'
complete -c lk -n '__fish_seen_subcommand_from join-room' -f -l fps -r -d 'if video files are published, indicates FPS of video'
complete -c lk -n '__fish_seen_subcommand_from join-room' -f -l exit-after-publish -d 'when publishing, exit after file or stream is complete'
complete -c lk -n '__fish_seen_subcommand_from join-room' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from join-room; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_lk_no_subcommand' -a 'dispatch' -d 'Create, list, and delete agent dispatches'
complete -c lk -n '__fish_seen_subcommand_from dispatch' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from dispatch; and not __fish_seen_subcommand_from list get create delete help h' -a 'list' -d 'List all agent dispatches in a room'
complete -c lk -n '__fish_seen_subcommand_from list' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from list; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from dispatch; and not __fish_seen_subcommand_from list get create delete help h' -a 'get' -d 'Get an agent dispatch by room and ID'
complete -c lk -n '__fish_seen_subcommand_from get' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from get; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from dispatch; and not __fish_seen_subcommand_from list get create delete help h' -a 'create' -d 'Create an agent dispatch'
complete -c lk -n '__fish_seen_subcommand_from create' -f -l room -r -d 'room name'
complete -c lk -n '__fish_seen_subcommand_from create' -f -l new-room -d 'when set, will generate a unique room name'
complete -c lk -n '__fish_seen_subcommand_from create' -f -l agent-name -r -d 'agent to dispatch'
complete -c lk -n '__fish_seen_subcommand_from create' -f -l metadata -r -d 'metadata to send to agent'
complete -c lk -n '__fish_seen_subcommand_from create' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from create; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from dispatch; and not __fish_seen_subcommand_from list get create delete help h' -a 'delete' -d 'Delete an agent dispatch'
complete -c lk -n '__fish_seen_subcommand_from delete' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from delete; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from dispatch; and not __fish_seen_subcommand_from list get create delete help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_lk_no_subcommand' -a 'egress' -d 'Record or stream media from LiveKit to elsewhere'
complete -c lk -n '__fish_seen_subcommand_from egress' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from egress; and not __fish_seen_subcommand_from start list stop test-template update-layout update-stream' -a 'start' -d 'Start egresses of various types'
complete -c lk -n '__fish_seen_subcommand_from start' -f -l type -r -d 'Specify `TYPE` of egress (see above)'
complete -c lk -n '__fish_seen_subcommand_from start' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from start; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from egress; and not __fish_seen_subcommand_from start list stop test-template update-layout update-stream' -a 'list' -d 'List and search active egresses'
complete -c lk -n '__fish_seen_subcommand_from list' -f -l id -r -d 'List a specific egress `ID`, can be used multiple times'
complete -c lk -n '__fish_seen_subcommand_from list' -f -l room -r -d 'Limits list to a certain room `NAME`'
complete -c lk -n '__fish_seen_subcommand_from list' -f -l active -s a -d 'Lists only active egresses'
complete -c lk -n '__fish_seen_subcommand_from list' -f -l json -s j -d 'Output as JSON'
complete -c lk -n '__fish_seen_subcommand_from list' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from list; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from egress; and not __fish_seen_subcommand_from start list stop test-template update-layout update-stream' -a 'stop' -d 'Stop an active egress'
complete -c lk -n '__fish_seen_subcommand_from stop' -f -l id -r -d 'Egress ID to stop, can be specified multiple times'
complete -c lk -n '__fish_seen_subcommand_from stop' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from stop; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from egress; and not __fish_seen_subcommand_from start list stop test-template update-layout update-stream' -a 'test-template' -d 'See what your egress template will look like in a recording'
complete -c lk -n '__fish_seen_subcommand_from test-template' -f -l base-url -r -d 'Base template `URL`'
complete -c lk -n '__fish_seen_subcommand_from test-template' -f -l layout -r -d 'Layout `TYPE`'
complete -c lk -n '__fish_seen_subcommand_from test-template' -f -l publishers -r -d '`NUMBER` of publishers'
complete -c lk -n '__fish_seen_subcommand_from test-template' -f -l room -r -d '`NAME` of the room'
complete -c lk -n '__fish_seen_subcommand_from test-template' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from test-template; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from egress; and not __fish_seen_subcommand_from start list stop test-template update-layout update-stream' -a 'update-layout' -d 'Updates layout for a live room composite egress'
complete -c lk -n '__fish_seen_subcommand_from update-layout' -f -l id -r -d 'Egress ID'
complete -c lk -n '__fish_seen_subcommand_from update-layout' -f -l layout -r -d 'new web layout'
complete -c lk -n '__fish_seen_subcommand_from update-layout' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from update-layout; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from egress; and not __fish_seen_subcommand_from start list stop test-template update-layout update-stream' -a 'update-stream' -d 'Adds or removes RTMP output urls from a live stream'
complete -c lk -n '__fish_seen_subcommand_from update-stream' -f -l id -r -d 'Egress ID'
complete -c lk -n '__fish_seen_subcommand_from update-stream' -f -l add-urls -r -d 'urls to add'
complete -c lk -n '__fish_seen_subcommand_from update-stream' -f -l remove-urls -r -d 'urls to remove'
complete -c lk -n '__fish_seen_subcommand_from update-stream' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from update-stream; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -c lk -n '__fish_seen_subcommand_from start-room-composite-egress' -f -l request -r -d 'RoomCompositeEgressRequest as JSON file'
complete -c lk -n '__fish_seen_subcommand_from start-room-composite-egress' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from start-room-composite-egress; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -c lk -n '__fish_seen_subcommand_from start-web-egress' -f -l request -r -d 'WebEgressRequest as json file (see cmd/livekit-cli/examples)'
complete -c lk -n '__fish_seen_subcommand_from start-web-egress' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from start-web-egress; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -c lk -n '__fish_seen_subcommand_from start-participant-egress' -f -l request -r -d 'ParticipantEgressRequest as json file (see cmd/livekit-cli/examples)'
complete -c lk -n '__fish_seen_subcommand_from start-participant-egress' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from start-participant-egress; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -c lk -n '__fish_seen_subcommand_from start-track-composite-egress' -f -l request -r -d 'TrackCompositeEgressRequest as json file (see cmd/livekit-cli/examples)'
complete -c lk -n '__fish_seen_subcommand_from start-track-composite-egress' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from start-track-composite-egress; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -c lk -n '__fish_seen_subcommand_from start-track-egress' -f -l request -r -d 'TrackEgressRequest as json file (see cmd/livekit-cli/examples)'
complete -c lk -n '__fish_seen_subcommand_from start-track-egress' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from start-track-egress; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -c lk -n '__fish_seen_subcommand_from list-egress' -f -l id -r -d 'list a specific egress id, can be used multiple times'
complete -c lk -n '__fish_seen_subcommand_from list-egress' -f -l room -r -d 'limits list to a certain room name'
complete -c lk -n '__fish_seen_subcommand_from list-egress' -f -l active -d 'lists only active egresses'
complete -c lk -n '__fish_seen_subcommand_from list-egress' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from list-egress; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -c lk -n '__fish_seen_subcommand_from update-layout' -f -l id -r -d 'Egress ID'
complete -c lk -n '__fish_seen_subcommand_from update-layout' -f -l layout -r -d 'new web layout'
complete -c lk -n '__fish_seen_subcommand_from update-layout' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from update-layout; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -c lk -n '__fish_seen_subcommand_from update-stream' -f -l id -r -d 'Egress ID'
complete -c lk -n '__fish_seen_subcommand_from update-stream' -f -l add-urls -r -d 'urls to add'
complete -c lk -n '__fish_seen_subcommand_from update-stream' -f -l remove-urls -r -d 'urls to remove'
complete -c lk -n '__fish_seen_subcommand_from update-stream' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from update-stream; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -c lk -n '__fish_seen_subcommand_from stop-egress' -f -l id -r -d 'Egress ID to stop, can be specified multiple times'
complete -c lk -n '__fish_seen_subcommand_from stop-egress' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from stop-egress; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -c lk -n '__fish_seen_subcommand_from test-egress-template' -f -l base-url -r -d 'Base template `URL`'
complete -c lk -n '__fish_seen_subcommand_from test-egress-template' -f -l layout -r -d 'Layout `TYPE`'
complete -c lk -n '__fish_seen_subcommand_from test-egress-template' -f -l publishers -r -d '`NUMBER` of publishers'
complete -c lk -n '__fish_seen_subcommand_from test-egress-template' -f -l room -r -d '`NAME` of the room'
complete -c lk -n '__fish_seen_subcommand_from test-egress-template' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from test-egress-template; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_lk_no_subcommand' -a 'ingress' -d 'Import outside media sources into a LiveKit room'
complete -c lk -n '__fish_seen_subcommand_from ingress' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from ingress; and not __fish_seen_subcommand_from create update list delete help h' -a 'create' -d 'Create an ingress'
complete -c lk -n '__fish_seen_subcommand_from create' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from create; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from ingress; and not __fish_seen_subcommand_from create update list delete help h' -a 'update' -d 'Update an ingress'
complete -c lk -n '__fish_seen_subcommand_from update' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from update; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from ingress; and not __fish_seen_subcommand_from create update list delete help h' -a 'list' -d 'List all active ingress'
complete -c lk -n '__fish_seen_subcommand_from list' -f -l room -r -d 'Limits list to a certain room `NAME`'
complete -c lk -n '__fish_seen_subcommand_from list' -f -l id -r -d 'List a specific ingress `ID`'
complete -c lk -n '__fish_seen_subcommand_from list' -f -l json -s j -d 'Output as JSON'
complete -c lk -n '__fish_seen_subcommand_from list' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from list; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from ingress; and not __fish_seen_subcommand_from create update list delete help h' -a 'delete' -d 'Delete an ingress'
complete -c lk -n '__fish_seen_subcommand_from delete' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from delete; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from ingress; and not __fish_seen_subcommand_from create update list delete help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -c lk -n '__fish_seen_subcommand_from create-ingress' -f -l request -r -d 'CreateIngressRequest as json file (see cmd/lk/examples)'
complete -c lk -n '__fish_seen_subcommand_from create-ingress' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from create-ingress; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -c lk -n '__fish_seen_subcommand_from update-ingress' -f -l request -r -d 'UpdateIngressRequest as json file (see cmd/lk/examples)'
complete -c lk -n '__fish_seen_subcommand_from update-ingress' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from update-ingress; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -c lk -n '__fish_seen_subcommand_from list-ingress' -f -l room -r -d 'limits list to a certain room name '
complete -c lk -n '__fish_seen_subcommand_from list-ingress' -f -l id -r -d 'list a specific ingress id'
complete -c lk -n '__fish_seen_subcommand_from list-ingress' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from list-ingress; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -c lk -n '__fish_seen_subcommand_from delete-ingress' -f -l id -r -d 'Ingress ID'
complete -c lk -n '__fish_seen_subcommand_from delete-ingress' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from delete-ingress; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_lk_no_subcommand' -a 'sip' -d 'Manage SIP Trunks, Dispatch Rules, and Participants'
complete -c lk -n '__fish_seen_subcommand_from sip' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from sip; and not __fish_seen_subcommand_from inbound in inbound-trunk outbound out outbound-trunk dispatch dispatch-rule participant help h' -a 'inbound' -d 'Inbound SIP Trunk management'
complete -c lk -n '__fish_seen_subcommand_from inbound in inbound-trunk' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from inbound in inbound-trunk; and not __fish_seen_subcommand_from list create update delete help h' -a 'list' -d 'List all inbound SIP Trunks'
complete -c lk -n '__fish_seen_subcommand_from list' -f -l json -s j -d 'Output as JSON'
complete -c lk -n '__fish_seen_subcommand_from list' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from list; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from inbound in inbound-trunk; and not __fish_seen_subcommand_from list create update delete help h' -a 'create' -d 'Create an inbound SIP Trunk'
complete -c lk -n '__fish_seen_subcommand_from create' -f -l name -r -d 'Sets a new name for the trunk'
complete -c lk -n '__fish_seen_subcommand_from create' -f -l numbers -r -d 'Sets a list of numbers for the trunk'
complete -c lk -n '__fish_seen_subcommand_from create' -f -l media-enc -r -d 'Sets media encryption for the trunk'
complete -c lk -n '__fish_seen_subcommand_from create' -f -l auth-user -r -d 'Set username for authentication'
complete -c lk -n '__fish_seen_subcommand_from create' -f -l auth-pass -r -d 'Set password for authentication'
complete -c lk -n '__fish_seen_subcommand_from create' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from create; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from inbound in inbound-trunk; and not __fish_seen_subcommand_from list create update delete help h' -a 'update' -d 'Update an inbound SIP Trunk'
complete -c lk -n '__fish_seen_subcommand_from update' -f -l id -r -d 'ID for the trunk to update'
complete -c lk -n '__fish_seen_subcommand_from update' -f -l name -r -d 'Sets a new name for the trunk'
complete -c lk -n '__fish_seen_subcommand_from update' -f -l numbers -r -d 'Sets a new list of numbers for the trunk'
complete -c lk -n '__fish_seen_subcommand_from update' -f -l auth-user -r -d 'Set username for authentication'
complete -c lk -n '__fish_seen_subcommand_from update' -f -l auth-pass -r -d 'Set password for authentication'
complete -c lk -n '__fish_seen_subcommand_from update' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from update; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from inbound in inbound-trunk; and not __fish_seen_subcommand_from list create update delete help h' -a 'delete' -d 'Delete a SIP Trunk'
complete -c lk -n '__fish_seen_subcommand_from delete' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from delete; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from inbound in inbound-trunk; and not __fish_seen_subcommand_from list create update delete help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from sip; and not __fish_seen_subcommand_from inbound in inbound-trunk outbound out outbound-trunk dispatch dispatch-rule participant help h' -a 'outbound' -d 'Outbound SIP Trunk management'
complete -c lk -n '__fish_seen_subcommand_from outbound out outbound-trunk' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from outbound out outbound-trunk; and not __fish_seen_subcommand_from list create update delete help h' -a 'list' -d 'List all outbound SIP Trunk'
complete -c lk -n '__fish_seen_subcommand_from list' -f -l json -s j -d 'Output as JSON'
complete -c lk -n '__fish_seen_subcommand_from list' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from list; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from outbound out outbound-trunk; and not __fish_seen_subcommand_from list create update delete help h' -a 'create' -d 'Create an outbound SIP Trunk'
complete -c lk -n '__fish_seen_subcommand_from create' -f -l name -r -d 'Sets a new name for the trunk'
complete -c lk -n '__fish_seen_subcommand_from create' -f -l address -r -d 'Sets a destination address for the trunk'
complete -c lk -n '__fish_seen_subcommand_from create' -f -l transport -r -d 'Sets a transport for the trunk'
complete -c lk -n '__fish_seen_subcommand_from create' -f -l destination-country -r -d 'Sets a destination country for the trunk as ISO 3166-1 alpha-2 (https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)'
complete -c lk -n '__fish_seen_subcommand_from create' -f -l media-enc -r -d 'Sets media encryption for the trunk'
complete -c lk -n '__fish_seen_subcommand_from create' -f -l numbers -r -d 'Sets a list of numbers for the trunk'
complete -c lk -n '__fish_seen_subcommand_from create' -f -l auth-user -r -d 'Set username for authentication'
complete -c lk -n '__fish_seen_subcommand_from create' -f -l auth-pass -r -d 'Set password for authentication'
complete -c lk -n '__fish_seen_subcommand_from create' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from create; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from outbound out outbound-trunk; and not __fish_seen_subcommand_from list create update delete help h' -a 'update' -d 'Update an outbound SIP Trunk'
complete -c lk -n '__fish_seen_subcommand_from update' -f -l id -r -d 'ID for the trunk to update'
complete -c lk -n '__fish_seen_subcommand_from update' -f -l name -r -d 'Sets a new name for the trunk'
complete -c lk -n '__fish_seen_subcommand_from update' -f -l address -r -d 'Sets a new destination address for the trunk'
complete -c lk -n '__fish_seen_subcommand_from update' -f -l transport -r -d 'Sets a new transport for the trunk'
complete -c lk -n '__fish_seen_subcommand_from update' -f -l destination-country -r -d 'Sets a destination country for the trunk as ISO 3166-1 alpha-2 (https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)'
complete -c lk -n '__fish_seen_subcommand_from update' -f -l numbers -r -d 'Sets a new list of numbers for the trunk'
complete -c lk -n '__fish_seen_subcommand_from update' -f -l auth-user -r -d 'Set username for authentication'
complete -c lk -n '__fish_seen_subcommand_from update' -f -l auth-pass -r -d 'Set password for authentication'
complete -c lk -n '__fish_seen_subcommand_from update' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from update; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from outbound out outbound-trunk; and not __fish_seen_subcommand_from list create update delete help h' -a 'delete' -d 'Delete SIP Trunk'
complete -c lk -n '__fish_seen_subcommand_from delete' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from delete; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from outbound out outbound-trunk; and not __fish_seen_subcommand_from list create update delete help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from sip; and not __fish_seen_subcommand_from inbound in inbound-trunk outbound out outbound-trunk dispatch dispatch-rule participant help h' -a 'dispatch' -d 'SIP Dispatch Rule management'
complete -c lk -n '__fish_seen_subcommand_from dispatch dispatch-rule' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from dispatch dispatch-rule; and not __fish_seen_subcommand_from list create update delete help h' -a 'list' -d 'List all SIP Dispatch Rule'
complete -c lk -n '__fish_seen_subcommand_from list' -f -l json -s j -d 'Output as JSON'
complete -c lk -n '__fish_seen_subcommand_from list' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from list; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from dispatch dispatch-rule; and not __fish_seen_subcommand_from list create update delete help h' -a 'create' -d 'Create a SIP Dispatch Rule'
complete -c lk -n '__fish_seen_subcommand_from create' -f -l name -r -d 'Sets a new name for the dispatch rule'
complete -c lk -n '__fish_seen_subcommand_from create' -f -l trunks -r -d 'Sets a list of trunks for the dispatch rule'
complete -c lk -n '__fish_seen_subcommand_from create' -f -l direct -r -d 'Sets a direct dispatch to a specified room'
complete -c lk -n '__fish_seen_subcommand_from create' -f -l caller -s individual -r -d 'Sets a individual caller dispatch to a new room with a specific prefix'
complete -c lk -n '__fish_seen_subcommand_from create' -f -l callee -r -d 'Sets a callee number dispatch to a new room with a specific prefix'
complete -c lk -n '__fish_seen_subcommand_from create' -f -l pin -d 'PIN for a dispatch rule'
complete -c lk -n '__fish_seen_subcommand_from create' -f -l randomize -d 'Randomize room name, only applies to callee dispatch'
complete -c lk -n '__fish_seen_subcommand_from create' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from create; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from dispatch dispatch-rule; and not __fish_seen_subcommand_from list create update delete help h' -a 'update' -d 'Update a SIP Dispatch Rule'
complete -c lk -n '__fish_seen_subcommand_from update' -f -l id -r -d 'ID for the rule to update'
complete -c lk -n '__fish_seen_subcommand_from update' -f -l name -r -d 'Sets a new name for the rule'
complete -c lk -n '__fish_seen_subcommand_from update' -f -l trunks -r -d 'Sets a new list of trunk IDs'
complete -c lk -n '__fish_seen_subcommand_from update' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from update; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from dispatch dispatch-rule; and not __fish_seen_subcommand_from list create update delete help h' -a 'delete' -d 'Delete SIP Dispatch Rule'
complete -c lk -n '__fish_seen_subcommand_from delete' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from delete; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from dispatch dispatch-rule; and not __fish_seen_subcommand_from list create update delete help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from sip; and not __fish_seen_subcommand_from inbound in inbound-trunk outbound out outbound-trunk dispatch dispatch-rule participant help h' -a 'participant' -d 'SIP Participant management'
complete -c lk -n '__fish_seen_subcommand_from participant' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from participant; and not __fish_seen_subcommand_from create transfer help h' -a 'create' -d 'Create a SIP Participant'
complete -c lk -n '__fish_seen_subcommand_from create' -f -l trunk -r -d '`SIP_TRUNK_ID` to use for the call (overrides json config)'
complete -c lk -n '__fish_seen_subcommand_from create' -f -l number -r -d '`SIP_NUMBER` to use for the call (overrides json config)'
complete -c lk -n '__fish_seen_subcommand_from create' -f -l call -r -d '`SIP_CALL_TO` number to use (overrides json config)'
complete -c lk -n '__fish_seen_subcommand_from create' -f -l room -r -d '`ROOM_NAME` to place the call to (overrides json config)'
complete -c lk -n '__fish_seen_subcommand_from create' -f -l identity -r -d '`PARTICIPANT_IDENTITY` to use (overrides json config)'
complete -c lk -n '__fish_seen_subcommand_from create' -f -l name -r -d '`PARTICIPANT_NAME` to use (overrides json config)'
complete -c lk -n '__fish_seen_subcommand_from create' -f -l wait -d 'wait for the call to dial (overrides json config)'
complete -c lk -n '__fish_seen_subcommand_from create' -f -l timeout -r -d 'timeout for the call to dial'
complete -c lk -n '__fish_seen_subcommand_from create' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from create; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from participant; and not __fish_seen_subcommand_from create transfer help h' -a 'transfer' -d 'Transfer a SIP Participant'
complete -c lk -n '__fish_seen_subcommand_from transfer' -f -l room -r -d '`NAME` of the room'
complete -c lk -n '__fish_seen_subcommand_from transfer' -f -l identity -r -d '`ID` of participant'
complete -c lk -n '__fish_seen_subcommand_from transfer' -f -l to -r -d '`SIP URL` to transfer the call to. Use \'tel:<phone number>\' to transfer to a phone'
complete -c lk -n '__fish_seen_subcommand_from transfer' -f -l play-dialtone -d 'if set, a dial tone will be played to the SIP participant while the transfer is being attempted'
complete -c lk -n '__fish_seen_subcommand_from transfer' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from transfer; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from participant; and not __fish_seen_subcommand_from create transfer help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from sip; and not __fish_seen_subcommand_from inbound in inbound-trunk outbound out outbound-trunk dispatch dispatch-rule participant help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -c lk -n '__fish_seen_subcommand_from list-sip-trunk' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from list-sip-trunk; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -c lk -n '__fish_seen_subcommand_from delete-sip-trunk' -f -l id -r -d 'SIPTrunk ID'
complete -c lk -n '__fish_seen_subcommand_from delete-sip-trunk' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from delete-sip-trunk; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -c lk -n '__fish_seen_subcommand_from create-sip-dispatch-rule' -f -l request -r -d 'CreateSIPDispatchRuleRequest as JSON file'
complete -c lk -n '__fish_seen_subcommand_from create-sip-dispatch-rule' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from create-sip-dispatch-rule; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -c lk -n '__fish_seen_subcommand_from list-sip-dispatch-rule' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from list-sip-dispatch-rule; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -c lk -n '__fish_seen_subcommand_from delete-sip-dispatch-rule' -f -l id -r -d 'SIPDispatchRule ID'
complete -c lk -n '__fish_seen_subcommand_from delete-sip-dispatch-rule' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from delete-sip-dispatch-rule; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -c lk -n '__fish_seen_subcommand_from create-sip-participant' -f -l request -r -d 'CreateSIPParticipantRequest as JSON file'
complete -c lk -n '__fish_seen_subcommand_from create-sip-participant' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from create-sip-participant; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -c lk -n '__fish_seen_subcommand_from replay' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from replay; and not __fish_seen_subcommand_from list load seek close delete' -a 'list'
complete -c lk -n '__fish_seen_subcommand_from list' -f -l json -s j -d 'Output as JSON'
complete -c lk -n '__fish_seen_subcommand_from list' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from list; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from replay; and not __fish_seen_subcommand_from list load seek close delete' -a 'load'
complete -c lk -n '__fish_seen_subcommand_from load' -f -l id -r -d 'Replay `ID`'
complete -c lk -n '__fish_seen_subcommand_from load' -f -l room -r -d 'Playback room name'
complete -c lk -n '__fish_seen_subcommand_from load' -f -l pts -r -d 'Playback start time'
complete -c lk -n '__fish_seen_subcommand_from load' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from load; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from replay; and not __fish_seen_subcommand_from list load seek close delete' -a 'seek'
complete -c lk -n '__fish_seen_subcommand_from seek' -f -l id -r -d 'Playback `ID`'
complete -c lk -n '__fish_seen_subcommand_from seek' -f -l pts -r -d 'Playback start time'
complete -c lk -n '__fish_seen_subcommand_from seek' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from seek; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from replay; and not __fish_seen_subcommand_from list load seek close delete' -a 'close'
complete -c lk -n '__fish_seen_subcommand_from close' -f -l id -r -d 'Playback `ID`'
complete -c lk -n '__fish_seen_subcommand_from close' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from close; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from replay; and not __fish_seen_subcommand_from list load seek close delete' -a 'delete'
complete -c lk -n '__fish_seen_subcommand_from delete' -f -l id -r -d 'Replay `ID`'
complete -c lk -n '__fish_seen_subcommand_from delete' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from delete; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_lk_no_subcommand' -a 'perf' -d 'Performance testing commands'
complete -c lk -n '__fish_seen_subcommand_from perf' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from perf; and not __fish_seen_subcommand_from load-test agent-load-test help h' -a 'load-test' -d 'Run load tests against LiveKit with simulated publishers & subscribers'
complete -c lk -n '__fish_seen_subcommand_from load-test' -f -l room -r -d '`NAME` of the room (default to random name)'
complete -c lk -n '__fish_seen_subcommand_from load-test' -f -l duration -r -d '`TIME` duration to run, 1m, 1h (by default will run until canceled)'
complete -c lk -n '__fish_seen_subcommand_from load-test' -f -l video-publishers -s publishers -r -d '`NUMBER` of participants that would publish video tracks'
complete -c lk -n '__fish_seen_subcommand_from load-test' -f -l audio-publishers -r -d '`NUMBER` of participants that would publish audio tracks'
complete -c lk -n '__fish_seen_subcommand_from load-test' -f -l subscribers -r -d '`NUMBER` of participants that would subscribe to tracks'
complete -c lk -n '__fish_seen_subcommand_from load-test' -f -l identity-prefix -r -d 'Identity `PREFIX` of tester participants (defaults to a random prefix)'
complete -c lk -n '__fish_seen_subcommand_from load-test' -f -l video-resolution -r -d 'Resolution `QUALITY` of video to publish ("high", "medium", or "low")'
complete -c lk -n '__fish_seen_subcommand_from load-test' -f -l video-codec -r -d '`CODEC` "h264" or "vp8", both will be used when unset'
complete -c lk -n '__fish_seen_subcommand_from load-test' -f -l num-per-second -r -d '`NUMBER` of testers to start every second'
complete -c lk -n '__fish_seen_subcommand_from load-test' -f -l layout -r -d '`LAYOUT` to simulate, choose from "speaker", "3x3", "4x4", "5x5"'
complete -c lk -n '__fish_seen_subcommand_from load-test' -f -l no-simulcast -d 'Disables simulcast publishing (simulcast is enabled by default)'
complete -c lk -n '__fish_seen_subcommand_from load-test' -f -l simulate-speakers -d 'Fire random speaker events to simulate speaker changes'
complete -c lk -n '__fish_seen_subcommand_from load-test' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from load-test; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from perf; and not __fish_seen_subcommand_from load-test agent-load-test help h' -a 'agent-load-test' -d 'Run load tests for a running agent'
complete -c lk -n '__fish_seen_subcommand_from agent-load-test' -f -l rooms -r -d '`NUMBER` of rooms to open'
complete -c lk -n '__fish_seen_subcommand_from agent-load-test' -f -l agent-name -r -d 'name of the running agent to dispatch to the rooom'
complete -c lk -n '__fish_seen_subcommand_from agent-load-test' -f -l echo-speech-delay -r -d 'delay between when the echo track speaks and when the agent starts speaking (e.g. 5s, 1m)'
complete -c lk -n '__fish_seen_subcommand_from agent-load-test' -f -l duration -r -d '`TIME` duration to run, 1m, 1h (by default will run until canceled)'
complete -c lk -n '__fish_seen_subcommand_from agent-load-test' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from agent-load-test; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c lk -n '__fish_seen_subcommand_from perf; and not __fish_seen_subcommand_from load-test agent-load-test help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -c lk -n '__fish_seen_subcommand_from load-test' -f -l room -r -d '`NAME` of the room (default to random name)'
complete -c lk -n '__fish_seen_subcommand_from load-test' -f -l duration -r -d '`TIME` duration to run, 1m, 1h (by default will run until canceled)'
complete -c lk -n '__fish_seen_subcommand_from load-test' -f -l video-publishers -s publishers -r -d '`NUMBER` of participants that would publish video tracks'
complete -c lk -n '__fish_seen_subcommand_from load-test' -f -l audio-publishers -r -d '`NUMBER` of participants that would publish audio tracks'
complete -c lk -n '__fish_seen_subcommand_from load-test' -f -l subscribers -r -d '`NUMBER` of participants that would subscribe to tracks'
complete -c lk -n '__fish_seen_subcommand_from load-test' -f -l identity-prefix -r -d 'Identity `PREFIX` of tester participants (defaults to a random prefix)'
complete -c lk -n '__fish_seen_subcommand_from load-test' -f -l video-resolution -r -d 'Resolution `QUALITY` of video to publish ("high", "medium", or "low")'
complete -c lk -n '__fish_seen_subcommand_from load-test' -f -l video-codec -r -d '`CODEC` "h264" or "vp8", both will be used when unset'
complete -c lk -n '__fish_seen_subcommand_from load-test' -f -l num-per-second -r -d '`NUMBER` of testers to start every second'
complete -c lk -n '__fish_seen_subcommand_from load-test' -f -l layout -r -d '`LAYOUT` to simulate, choose from "speaker", "3x3", "4x4", "5x5"'
complete -c lk -n '__fish_seen_subcommand_from load-test' -f -l no-simulcast -d 'Disables simulcast publishing (simulcast is enabled by default)'
complete -c lk -n '__fish_seen_subcommand_from load-test' -f -l simulate-speakers -d 'Fire random speaker events to simulate speaker changes'
complete -c lk -n '__fish_seen_subcommand_from load-test' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from load-test; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -c lk -n '__fish_seen_subcommand_from completion' -f -l help -s h -d 'show help'
complete -x -c lk -n '__fish_seen_subcommand_from completion; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
